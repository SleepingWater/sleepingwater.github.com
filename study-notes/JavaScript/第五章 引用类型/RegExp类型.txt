var expression=/pattern/flags
模式（pattern）部分可以使任何简单或复杂的正则表达式
每个正则表达式都可带有一或多个标志（flags），用以表明正则表达式的行为。正则表达式的匹配模式支持下列3个标志：
g：表示全局（global）模式，该模式将被应用于所有字符串，而非发现第一个匹配项时立即停止；
i：表示不区分大小写模式；
m：表示多行模式，在到达一行文本末尾时还会继续查找下一行中是否存在与模式匹配的项；

/at/g 匹配所有的“at”
/[bc]at/i 匹配第一个“bat”或“cat”，不区分大小写
/\[bc\]at/i 匹配第一个“[bc]at”，不区分大小写
/.at/gi 匹配所有以“at”结尾的3个字符的组合，不区分大小写

使用RegExp构造函数创建正则表达式
var pattern=new RegExp("[bc]at","i");
如果要匹配“[bc]at”，应该是：
var pattern=new RegExp("\\[bc\\]at","i");

-RegExp实例属性
golbal：布尔值，是否设置了g标志
ignoreCase：布尔值，是否设置了i标志
lastIndex：整数，表示开始搜索下一个匹配项的字符位置，从0算起
multiline：布尔值，是否设置了m标志
source：正则表达式的字符串表示，按照字面量形式而非传入构造函数中的字符串模式返回

-RegExp实例方法
exec();
test();

-构造函数属性

-模式的局限性