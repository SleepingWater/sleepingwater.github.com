1、object#keys
获取对象上所有的自有键
var a = {a:'b',c:'d'};
Object.keys(a);//['a','c'];

2、array#isArray
Array.isArray([]) //true
Array.isArray(null) //false

3、数组方法
要遍历数组，可以用foreach方法（类似jQuery的$.each）
[1,2,3].foreach(function(v){
	console.log(v);//1,2,3
});
要过滤数组元素，可以使用filter（类似jQuery的$.grep）
[1,2,3].filter(function(v){
	return v<3;//返回[1,2]
});
要改变数组中的每个元素的值，可以用map（类似jQuery的$.map）
[5,10,15].map(function(v){
	return v*2;//10,20,30
});

4、字符串方法
移除字符串首末的空格
' hello '.trim();

5、V8提供了JSON.stringify和JSON.parse方法来对JSON数组进行解码和编码

6、.bind（类似jQuery的$.proxy）允许改变对this的引用
function a(){
	this.hello == 'world';//true
};
var b = a.bind({hello:'world'});
b();

7、V8还支持非标准的函数属性名
var a =function woot(){};
a.name == 'woot'//true

var woot = function(){}//Error

8、_proto_继承
function Animal(){}
function Ferret(){}
Ferret.prototype._proto_ = Animal.prototype;

9、存储器
可以通过调用方法来定义属性，访问属性就使用_defineGetter_，设置属性就使用_defineSetter_
Date.prototype._defineGetter_('ago',function(){
	var diff = (((new Date()).getTime() - this.getTime())/1000),day_diff = Math.floor(diff/86400);
	return day_diff == 0 && (
		diff < 60 && "just now" ||
		diff < 120 && "1 minute ago" ||
		diff < 3600 && Math.floor(diff/60) + "minutes ago" ||
		diff < 7200 && "1 hour ago" ||
		diff < 86400 && Math.floor(diff/3600) + "hours ago" )||
		day_diff = 1 && "Yesterday" ||
		day_diff < 7 && day_diff + "days ago" ||
		Math.ceil(day_diff/7) + "weeks ago";
});

var a = new Date('12/12/1990');
a.ago;//1071 weeks ago